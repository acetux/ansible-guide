==========
ROLE SNMP
==========

.. image:: https://img.shields.io/github/license/adfinis-sygroup/ansible-role-snmp.svg?style=flat-square
  :target: https://github.com/adfinis-sygroup/ansible-role-snmp/blob/master/LICENSE

.. image:: https://img.shields.io/travis/adfinis-sygroup/ansible-role-snmp.svg?style=flat-square
  :target: https://github.com/adfinis-sygroup/ansible-role-snmp

.. image:: https://img.shields.io/badge/galaxy-adfinis--sygroup.snmp-660198.svg?style=flat-square
  :target: https://galaxy.ansible.com/adfinis-sygroup/snmp

A brief description of the role goes here.


Requirements
=============

Any pre-requisites that may not be covered by Ansible itself or the role
should be mentioned here. For instance, if the role uses the EC2 module, it
may be a good idea to mention in this section that the boto package is required.


Role Variables
===============

A description of the settable variables for this role should go here, including
any variables that are in defaults/main.yml, vars/main.yml, and any variables
that can/should be set via parameters to the role. Any variables that are read
from other roles and/or the global scope (ie. hostvars, group vars, etc.)
should be mentioned here as well.


Dependencies
=============

A list of other roles hosted on Galaxy should go here, plus any details in
regards to parameters that may need to be set for other roles, or variables
that are used from other roles.


Example Playbook
=================

Including an example of how to use your role (for instance, with variables
passed in as parameters) is always nice for users too:

.. code-block:: yaml

  - hosts: servers
    roles:
       - { role: adfinis-sygroup.snmp }


License
========

`GPL-3.0 <https://github.com/adfinis-sygroup/ansible-role-snmp/blob/master/LICENSE>`_


Author Information
===================

snmp role was written by:

* Adfinis SyGroup AG | `Website <https://www.adfinis-sygroup.ch/>`_ | `Twitter <https://twitter.com/adfinissygroup>`_ | `GitHub <https://github.com/adfinis-sygroup>`_



Default values
==============

   
SNMP related packages (e.g. lm-sensors).

.. code-block:: YAML

   snmp_additional_packages: []
   
String with ``snmpd`` log-related options, can be used to change log
verbosity for debugging. E.g. ``-LScd``

.. code-block:: YAML

   snmp_logging_options: ''
   
Path on the remote host where extension scripts are stored.

.. code-block:: YAML

   snmp_extension_scripts: /usr/local/lib/snmpd
   
   
---------------------------------------
Network options, firewall, TCP wrappers
---------------------------------------
List of addresses on which to listen for incoming connections. By default
``snmpd`` listens on all interfaces and firewall / TCP wrappers are used to
limit what remote hosts can connect.

.. code-block:: YAML

   snmp_agent_address:
     - 'udp:0.0.0.0:161'
     - 'udp6:[::]:161'
   
   
-----------------------------------------------
sysLocation, sysContact, sysName SNMP variables
-----------------------------------------------
Organization name used in ``sysLocation`` and ``sysContact`` SNMP variables.

.. code-block:: YAML

   snmp_organization: '{{ ansible_domain.split(".") | first | capitalize }}'
   
String set as ``sysLocation`` SNMP variable.

.. code-block:: YAML

   snmp_sys_location: '{{ snmp_organization + " " + snmp_sys_location_name }}'
   
Name of the "virtual" location, appended to the organization name derived
from DNS domain name.

.. code-block:: YAML

   snmp_sys_location_name: 'Data Center'
   
Contact information for a device set as ``sysContact`` SNMP variable.

.. code-block:: YAML

   snmp_sys_contact: '{{ snmp_sys_contact_name + " <" + snmp_sys_contact_email + ">" }}'
   
Name of the contact set as ``sysContact`` variable.

.. code-block:: YAML

   snmp_sys_contact_name: '{{ snmp_organization + " System Administrator" }}'
   
E-mail address of the contact set as ``sysContact`` variable.

.. code-block:: YAML

   snmp_sys_contact_email: 'root@{{ ansible_domain }}'
   
Host FQDN set as the ``sysName`` SNMP variable.

.. code-block:: YAML

   snmp_sys_name: '{{ ansible_fqdn }}'
   
   
---------------------------
CPU load average monitoring
---------------------------
Enable or disable load average monitoring

.. code-block:: YAML

   snmp_load: true
   
Name of the load average "profile" to use, see ``snmp_load_percent_map`` and
``snmp_load_weight_map`` variables for list of profiles.

.. code-block:: YAML

   snmp_load_profile: default
   
Name of the profile used to define amount of available CPU power taken into
account for load average profile calculation. See ``snmp_load_percent_map``
variable for list of available profiles.

.. code-block:: YAML

   snmp_load_percent: '{{ snmp_load_profile }}'
   
Name of the profile used to scale the load average profile calculation for
different time periods. See ``snmp_load_percent_map`` variable for list of
available profiles.

.. code-block:: YAML

   snmp_load_weight: '{{ snmp_load_profile }}'
   
Base value used to calculate load average profiles - number of vCPU cores.

.. code-block:: YAML

   snmp_load_base: '{{ ansible_processor_vcpus }}'
   
Dict with CPU percentage profiles.

Each profile is a list of entries, 1 minute load average, 5 minutes and 15
minutes. Each entry defines how much of total CPU power available on a host
is taken into account, divided by number of virtual CPUs present; for example
with 4 vCPUs, 100% means 4 vCPUs, 50% means ~2 vCPUs, 200% means ~8 vCPUs,
and so on.

Values lower than 100% mean that alerts will be fired earlier, values higher
than 100% give processes more time to do the work before firing the alerts.

.. code-block:: YAML

   snmp_load_percent_map:
     default:
       - 90
       - 90
       - 100
   
Dict with load average weight profiles.

Each profile is a list of entries, 1 minute load average, 5 minutes and 15
minutes. Each entry defines how the calculation for a particular average is
scaled. You can use this parameter to make each value lower (with less than
1.0) or higher (with more than 1.0) and change the shape of the load average
profile independently of the number of cores available.

It's hard to explain, essentially it's another parameter which you can use to
tune the load average monitoring.

.. code-block:: YAML

   snmp_load_weight_map:
     default:
       - 1.5
       - 1.7
       - 1.8
   
1 minute load average value which will trigger a SNMP trap.

.. code-block:: YAML

   snmp_load_1min: '{{ (((snmp_load_base | float) *
                          (snmp_load_percent_map[snmp_load_percent][0] | float) / 100) | float *
                           snmp_load_weight_map[snmp_load_weight][0] | float) }}'
   
5 minute load average value which will trigger a SNMP trap.

.. code-block:: YAML

   snmp_load_5min: '{{ (((snmp_load_base | float) *
                          (snmp_load_percent_map[snmp_load_percent][1] | float) / 100) | float *
                           snmp_load_weight_map[snmp_load_weight][1] | float) }}'
   
15 minute load average value which will trigger a SNMP trap.

.. code-block:: YAML

   snmp_load_15min: '{{ (((snmp_load_base | float) *
                           (snmp_load_percent_map[snmp_load_percent][2] | float) / 100) | float *
                            snmp_load_weight_map[snmp_load_weight][2] | float) }}'
   
   
------------------
SNMPv2 communities
------------------
Define snmp read only communities

.. code-block:: YAML

   snmp_rocommunity: []
   
E.g.

.. code-block:: YAML

  snmp_rocommunity:
    - passwd: ''
      source: ''

Define snmp read write communities

.. code-block:: YAML

   snmp_rwcommunity: []
   
E.g.

.. code-block:: YAML

  snmp_rwcommunity:
    - passwd: ''
      source: ''

---------------
SNMPv3 accounts
---------------
Create a local account

.. code-block:: YAML

   snmp_account_local_username: ''
   snmp_account_local_password: ''
   
Accounts list

.. code-block:: YAML

   snmp_accounts_list: []
   
E.g.

.. code-block:: YAML

 snmp_accounts_list:
   - name: user1
     authProtocol: (MD5|SHA)                # optional
     authPassword: authpassphrase
     privProtocol: (DES|AES)                # optional
     privPassword: privpassphrase
   - name: user2
     authPassword: authpassphrase_user2
     privPassword: privpassphrase_user2
